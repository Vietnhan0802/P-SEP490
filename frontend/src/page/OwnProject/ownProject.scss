#own_project {
  .avata-s {
    width: 50px;
    height: 50px;
    border-radius: 50%;
  }

  .button_custom {
    height: 42px;
    margin: auto;
    margin-right: 10px;
  }
  .border_custom {
    border-radius: 8px;
  }

  .left-30 {
    margin-left: 10px;
  }
  .form {
    border-radius: 8px;
  }
  .project-search {
    input {
      max-height: 38px;
    }
    background-color: var(--header_background_search_box);
    border-radius: 8px;
    padding: 0px 12px;
    .search_icon {
      color: var(--header_search_box);
    }

    .search-box {
      background-color: var(--header_background_search_box);
      color: var(--header_search_text);
      border: none !important;
      outline: none;
      padding: 8px;
      border-radius: 8px;
      font-size: 18px;
    }
  }
  .project-form {
    background-color: var(--header_background) !important;
    border-radius: 8px;
    padding: 12px;
  }

  .width-100 {
    width: 100% !important;
  }

  .width-45 {
    width: 45px;
  }

  .height-100 {
    height: 100%;
  }

  .width-200 {
    max-width: 200px;
  }

  .bor-8 {
    border-radius: 8px;
  }

  .image-container {
    max-height: 60vh;
    /* Hoặc bất kỳ chiều cao nào bạn muốn */
    background-color: #f0f0f0;
    /* Màu của background cho phần bị thừa */
    overflow: hidden;
    /* Ẩn phần của ảnh không vừa với container */
    border-radius: 8px;
  }

  .image-container img {
    width: 100%;
    object-fit: contain;
    /* Giữ tỷ lệ của ảnh nhưng vẫn che đầy container */
    object-position: center;
    /* Căn giữa ảnh */
  }
}
.input-text {
  border: 1px solid #d0d5dd;
  max-height: 750px;
  resize: both;
  overflow: auto;
  font-size: 16px;
  font-weight: 500;
  border-radius: 8px;
  padding: 16px;
  margin: 5px 0px;

  &:focus {
    outline: none;
  }
}
#cus-project.modal-dialog {
  max-width: 60vw;
  .ql-container {
    height: 300px;
  }
}
#create-project {
  .input-cover {
    background-color: #efefef;
    padding: 32px;
    border-radius: 20px;
  }

  input[type="file"] {
    padding: 4px;
    margin: -4px;
    position: relative;
    outline: none;

    /* File Selector Button Styles */
    &::file-selector-button {
      border-radius: 4px;
      padding: 0 16px;
      height: 40px;
      cursor: pointer;
      background-color: white;
      border: 1px solid rgba(#000, 0.16);
      box-shadow: 0px 1px 0px rgba(#000, 0.05);
      margin-right: 16px;

      /*
        This is a hack to change the button label. 
        I'm hiding the default label and then 
        manually applying the width based on 
        updated icon and label.
      */
      width: 132px;
      color: transparent;

      /*
        Firefox doesn't support the pseudo ::before 
        or ::after elements on this input field so 
        we need to use the @supports rule to enable 
        default styles fallback for Firefox.
      */
      @supports (-moz-appearance: none) {
        color: var(--primary-color);
      }

      &:hover {
        background-color: #f3f4f6;
      }

      &:active {
        background-color: #e5e7eb;
      }
    }

    /* Faked label styles and icon */
    &::before {
      position: absolute;
      pointer-events: none;
      top: 8px;
      left: 8px;
      height: 20px;
      width: 20px;
      content: "";
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%230964B0'%3E%3Cpath d='M18 15v3H6v-3H4v3c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-3h-2zM7 9l1.41 1.41L11 7.83V16h2V7.83l2.59 2.58L17 9l-5-5-5 5z'/%3E%3C/svg%3E");
    }

    &::after {
      position: absolute;
      pointer-events: none;
      top: 8px;
      left: 35px;
      color: var(--primary-color);
      content: "Upload File";
    }

    /* Handle Component Focus */
    &:focus-within::file-selector-button,
    &:focus::file-selector-button {
      outline: 2px solid var(--primary-color);
      outline-offset: 2px;
    }
  }
  button{
    height: fit-content;
  }
}

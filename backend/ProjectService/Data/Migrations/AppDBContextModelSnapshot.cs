// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectService.Data;

#nullable disable

namespace ProjectService.Data.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObjects.Entities.Projects.Position", b =>
                {
                    b.Property<Guid>("idPosition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("idProject")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("namePosition")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPosition");

                    b.HasIndex("idProject");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Projects.Project", b =>
                {
                    b.Property<Guid>("idProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("process")
                        .HasColumnType("int");

                    b.Property<int>("visibility")
                        .HasColumnType("int");

                    b.HasKey("idProject");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Projects.ProjectMember", b =>
                {
                    b.Property<Guid>("idProjectMember")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("confirmedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("cvUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("idPosition")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("idProject")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("isAcept")
                        .HasColumnType("bit");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("idProjectMember");

                    b.HasIndex("idPosition");

                    b.HasIndex("idProject");

                    b.ToTable("ProjectMembers");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Projects.Rating", b =>
                {
                    b.Property<Guid>("idRating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("idProject")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("idProjectMember")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("idRated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idRater")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.HasKey("idRating");

                    b.HasIndex("idProject");

                    b.HasIndex("idProjectMember");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Projects.Position", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Projects.Project", "Project")
                        .WithMany("Positions")
                        .HasForeignKey("idProject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Projects.ProjectMember", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Projects.Position", "Position")
                        .WithMany()
                        .HasForeignKey("idPosition");

                    b.HasOne("BusinessObjects.Entities.Projects.Project", "Project")
                        .WithMany("ProjectMembers")
                        .HasForeignKey("idProject");

                    b.Navigation("Position");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Projects.Rating", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Projects.Project", "Project")
                        .WithMany("Ratings")
                        .HasForeignKey("idProject");

                    b.HasOne("BusinessObjects.Entities.Projects.ProjectMember", "ProjectMember")
                        .WithMany("Ratings")
                        .HasForeignKey("idProjectMember")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("ProjectMember");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Projects.Project", b =>
                {
                    b.Navigation("Positions");

                    b.Navigation("ProjectMembers");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Projects.ProjectMember", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
